from typing import Callable

from binaryninja.lowlevelil import LowLevelILFunction

from ..instruction import Instruction

from .logical import lift_logical_instructions
from .shift import lift_shift_instructions
from .arithmetic import lift_add_instructions, lift_sub_instructions, lift_mul_instructions
from .compare import lift_compare_instructions
from .load import lift_load_instructions
from .move_sysreg import lift_move_sysreg_instructions
from .store import lift_store_instructions
from .multiple import lift_multiple_instructions
from .branch import lift_branch_instructions, lift_cond_branch_instructions, lift_indirect_branch_instructions

from .load_b import lift_b_load_instructions
from .store_b import lift_b_store_instructions
from .arithmetic_b import (lift_b_add_instructions, lift_b_sub_instructions, 
lift_b_neg_instructions, lift_b_mul_instructions, lift_b_div_instructions)
from .compare_b import lift_b_compare_instructions
from .logical_b import lift_b_logical_instructions
from .shift_b import lift_b_shift_instructions
from .spe_fs import lift_sp_fss_instructions
from .move_sysreg_b import lift_b_move_sysreg_instructions

InstLiftFuncType = Callable[[Instruction, LowLevelILFunction], None] 


InstLiftTable: dict[str, InstLiftFuncType] = {
    "se_illegal" : lambda inst, il: il.append(il.undefined()),
    "se_isync"   : lambda inst, il: il.append(il.intrinsic([], "isync", [])),
    "se_sc"      : lambda inst, il: il.append(il.system_call()),
    "se_rfi"     : lambda inst, il: il.append(il.intrinsic([], "rfi", [])),
    "se_rfci"    : lambda inst, il: il.append(il.intrinsic([], "rfci", [])),
    "se_rfdi"    : lambda inst, il: il.append(il.intrinsic([], "rfdi", [])),
    "se_rfmci"   : lambda inst, il: il.append(il.intrinsic([], "rfmci", [])),
    "e_b"        : lift_branch_instructions,
    "se_b"       : lift_branch_instructions,
    "e_bc"       : lift_cond_branch_instructions,
    "se_bc"      : lift_cond_branch_instructions,
    "se_blr"     : lift_indirect_branch_instructions,
    "se_bctr"    : lift_indirect_branch_instructions,
    "se_add"     : lift_add_instructions,
    "e_add16i"   : lift_add_instructions,
    "e_add2i"    : lift_add_instructions,
    "e_add2i."   : lift_add_instructions,
    "e_add2is"   : lift_add_instructions,
    "e_addi"     : lift_add_instructions,
    "se_addi"    : lift_add_instructions,
    "e_addic"    : lift_add_instructions, 
    "se_sub"     : lift_sub_instructions,
    "se_subf"    : lift_sub_instructions,
    "e_subfic"   : lift_sub_instructions,
    "se_subi"    : lift_sub_instructions,
    "e_mulli"    : lift_mul_instructions,
    "e_mull2i"   : lift_mul_instructions,
    "se_mullw"   : lift_mul_instructions,
    "se_neg"     : lift_mul_instructions,
    "se_btsti"   : lift_compare_instructions,
    "e_cmp16i"   : lift_compare_instructions,
    "e_cmpi"     : lift_compare_instructions,
    "se_cmp"     : lift_compare_instructions,
    "se_cmpi"    : lift_compare_instructions,
    "e_cmpl16i"  : lift_compare_instructions,
    "e_cmpli"    : lift_compare_instructions,
    "se_cmpl"    : lift_compare_instructions,
    "se_cmpli"   : lift_compare_instructions,
    "e_cmph"     : lift_compare_instructions, 
    "se_cmph"    : lift_compare_instructions,
    "e_cmph16i"  : lift_compare_instructions,
    "e_cmphl"    : lift_compare_instructions, 
    "se_cmphl"   : lift_compare_instructions,
    "e_cmphl16i" : lift_compare_instructions,
    "e_lbz"      : lift_load_instructions,
    "se_lbz"     : lift_load_instructions,
    "e_lbzu"     : lift_load_instructions,
    "e_lha"      : lift_load_instructions,
    "e_lhz"      : lift_load_instructions,
    "se_lhz"     : lift_load_instructions,
    "e_lhau"     : lift_load_instructions,
    "e_lhzu"     : lift_load_instructions,
    "e_lwz"      : lift_load_instructions,
    "se_lwz"     : lift_load_instructions,
    "e_lwzu"     : lift_load_instructions,
    "e_and2i."   : lift_logical_instructions,
    "e_and2is."  : lift_logical_instructions,
    "e_andi"     : lift_logical_instructions,
    "se_andi"    : lift_logical_instructions,
    "e_or2i"     : lift_logical_instructions,
    "e_or2is"    : lift_logical_instructions,
    "e_ori"      : lift_logical_instructions,
    "e_xori"     : lift_logical_instructions,
    "se_and"     : lift_logical_instructions,
    "se_andc"    : lift_logical_instructions,
    "se_or"      : lift_logical_instructions,
    "se_not"     : lift_logical_instructions,
    "se_bclri"   : lift_logical_instructions,
    "se_bgeni"   : lift_logical_instructions,
    "se_bmaski"  : lift_logical_instructions,
    "se_bseti"   : lift_logical_instructions,
    "se_extsb"   : lift_logical_instructions,
    "se_extsh"   : lift_logical_instructions,
    "se_extzb"   : lift_logical_instructions,
    "se_extzh"   : lift_logical_instructions,
    "e_li"       : lift_logical_instructions,
    "se_li"      : lift_logical_instructions,
    "e_lis"      : lift_logical_instructions,
    "se_mfar"    : lift_logical_instructions,
    "se_mr"      : lift_logical_instructions,
    "se_mtar"    : lift_logical_instructions,
    "se_mflr"    : lift_move_sysreg_instructions,
    "se_mtlr"    : lift_move_sysreg_instructions,
    "se_mfctr"   : lift_move_sysreg_instructions,
    "se_mtctr"   : lift_move_sysreg_instructions,
    "e_stb"      : lift_store_instructions,
    "e_stbu"     : lift_store_instructions,
    "e_sth"      : lift_store_instructions,
    "e_sthu"     : lift_store_instructions,
    "e_stw"      : lift_store_instructions,
    "e_stwu"     : lift_store_instructions,
    "se_stb"     : lift_store_instructions,
    "se_sth"     : lift_store_instructions,
    "se_stw"     : lift_store_instructions,
    "e_lmw"      : lift_multiple_instructions,
    "e_stmw"     : lift_multiple_instructions,
    "e_lmvgprw"  : lift_multiple_instructions,
    "e_stmvgprw" : lift_multiple_instructions,
    "e_lmvsprw"  : lift_multiple_instructions,
    "e_stmvsprw" : lift_multiple_instructions,
    "e_lmvsrrw"  : lift_multiple_instructions,
    "e_stmvsrrw" : lift_multiple_instructions,
    "e_lmvcsrrw" : lift_multiple_instructions,
    "e_stmvcsrrw": lift_multiple_instructions,
    "e_lmvdsrrw" : lift_multiple_instructions,
    "e_stmvdsrrw"   : lift_multiple_instructions,
    "e_lmvmcsrrw"   : lift_multiple_instructions,
    "e_stmvmcsrrw"  : lift_multiple_instructions,
    "e_rlwimi"   : lift_shift_instructions,
    "e_rlwinm"   : lift_shift_instructions,
    "se_slwi"    : lift_shift_instructions,
    "se_slw"     : lift_shift_instructions,
    "se_srawi"   : lift_shift_instructions,
    "se_sraw"    : lift_shift_instructions,
    "se_srwi"    : lift_shift_instructions,
    "se_srw"     : lift_shift_instructions,
    "e_rlw"      : lift_shift_instructions,
    "e_rlwi"     : lift_shift_instructions,
    "e_slwi"     : lift_shift_instructions,
    "e_srwi"     : lift_shift_instructions,

    "lbzx"       : lift_b_load_instructions,
    "lbzux"      : lift_b_load_instructions,
    "lhzx"       : lift_b_load_instructions,
    "lhzux"      : lift_b_load_instructions,
    "lhax"       : lift_b_load_instructions,
    "lhaux"      : lift_b_load_instructions,
    "lwzx"       : lift_b_load_instructions,
    "lwzux"      : lift_b_load_instructions,

    "stbx"       : lift_b_store_instructions,
    "stbux"      : lift_b_store_instructions,
    "sthx"       : lift_b_store_instructions,
    "sthux"      : lift_b_store_instructions,
    "stwx"       : lift_b_store_instructions,
    "stwux"      : lift_b_store_instructions,
    "sthbrx"     : lift_b_store_instructions,
    "stwbrx"     : lift_b_store_instructions,

    "lhbrx"      : lift_b_load_instructions,
    "lwbrx"      : lift_b_load_instructions,

    "add"        : lift_b_add_instructions,
    "addo"       : lift_b_add_instructions,
    "addc"       : lift_b_add_instructions,
    "addco"      : lift_b_add_instructions,
    "adde"       : lift_b_add_instructions,
    "addeo"      : lift_b_add_instructions,
    "addme"      : lift_b_add_instructions,
    "addmeo"     : lift_b_add_instructions,
    "addze"      : lift_b_add_instructions,
    "addzeo"     : lift_b_add_instructions,

    "subf"       : lift_b_sub_instructions,
    "subfo"      : lift_b_sub_instructions,
    "subfc"      : lift_b_sub_instructions,
    "subfco"     : lift_b_sub_instructions,
    "subfe"      : lift_b_sub_instructions,
    "subfeo"     : lift_b_sub_instructions,
    "subfme"     : lift_b_sub_instructions,
    "subfmeo"    : lift_b_sub_instructions,
    "subfze"     : lift_b_sub_instructions,
    "subfzeo"    : lift_b_sub_instructions,

    "neg"        : lift_b_neg_instructions,
    "nego"       : lift_b_neg_instructions,

    "mullw"      : lift_b_mul_instructions,
    "mullwo"     : lift_b_mul_instructions,
    "mulhwu"     : lift_b_mul_instructions,
    "mulhw"      : lift_b_mul_instructions,

    "divw"       : lift_b_div_instructions,
    "divwo"      : lift_b_div_instructions,
    "divwu"      : lift_b_div_instructions,
    "divwuo"     : lift_b_div_instructions,

    "cmp"        : lift_b_compare_instructions,
    "cmpl"       : lift_b_compare_instructions,

    "and"        : lift_b_logical_instructions,
    "nand"       : lift_b_logical_instructions,
    "andc"       : lift_b_logical_instructions,
    "or"         : lift_b_logical_instructions,
    "nor"        : lift_b_logical_instructions,
    "orc"        : lift_b_logical_instructions,
    "xor"        : lift_b_logical_instructions,
    "eqv"        : lift_b_logical_instructions,
    "extsb"      : lift_b_logical_instructions,
    "extsh"      : lift_b_logical_instructions,
    # "cntlzw"     : lambda inst, il: il.append(il.intrinsic([], "cntlzw", [])),
    # "popcntb"    : lambda inst, il: il.append(il.intrinsic([], "popcntb", [])),

    "slw"        : lift_b_shift_instructions,
    "srw"        : lift_b_shift_instructions,
    "sraw"       : lift_b_shift_instructions,
    "srawi"      : lift_b_shift_instructions,

    "mtspr"      : lift_b_move_sysreg_instructions,
    "mfspr"      : lift_b_move_sysreg_instructions,
    "efsneg"    : lift_sp_fss_instructions,
    "efsabs"    : lift_sp_fss_instructions,
}
